---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: alb-ingress-nginx-public
  namespace: flux-system
spec:
  releaseName: alb-ingress-nginx-public
  targetNamespace: production
  upgrade:
    preserveValues: false
  install:
    createNamespace: true
  interval: 5m
  chart:
    spec:
      chart: ingress-nginx
      version: '3.39.0'
      sourceRef:
        kind: HelmRepository
        name: ingress-nginx
        namespace: flux-system
      interval: 1m
  values:
    controller:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app.kubernetes.io/name
                      operator: In
                      values:
                        - ingress-nginx
                    - key: app.kubernetes.io/instance
                      operator: In
                      values:
                        - alb-ingress-nginx-public
                    - key: app.kubernetes.io/component
                      operator: In
                      values:
                        - controller
                topologyKey: kubernetes.io/hostname
      replicaCount: 2
      ingressClass: alb-nginx-public
      proxySetHeaders:
        X-Different-Name: "true"
        X-Request-Start: "t=${msec}"
        X-Using-Nginx-Controller: "true"
        proxy-protocol: "True"
        real_ip_header: "X-Forwarded-For"
        set-real-ip-from: "0.0.0.0/0"
        real_ip_recursive: "on"
      publishService:
        enabled: false
      podAnnotations:
        prometheus.io/scrape: "false"
        prometheus.io/port: "10254"
      service:
        enabled: true
        enableHttp: true
        enableHttps: true
        targetPorts:
          http: http
          https: http
        type: NodePort
      metrics:
        port: 10254
        enabled: false
        serviceMonitor:
          enabled: false
          additionalLabels: {}
          # The label to use to retrieve the job name from.
          # jobLabel: "app.kubernetes.io/name"
          namespace: ""
          namespaceSelector: {}
          # Default: scrape .Release.Namespace only
          # To scrape all, use the following:
          # namespaceSelector:
          #   any: true
          scrapeInterval: 30s
          honorLabels: true
          targetLabels: []
          metricRelabelings: []
        prometheusRule:
          enabled: false
          additionalLabels: {}
          namespace: ""
          rules:
            # These are just examples rules, please adapt them to your needs
            - alert: NGINXConfigFailed
              expr: count(nginx_ingress_controller_config_last_reload_successful == 0) > 0
              for: 1s
              labels:
                severity: critical
              annotations:
                description: bad ingress config - nginx config test failed
                summary: uninstall the latest ingress changes to allow config reloads to resume
            - alert: NGINXCertificateExpiry
              expr: (avg(nginx_ingress_controller_ssl_expire_time_seconds) by (host) - time()) < 604800
              for: 1s
              labels:
                severity: critical
              annotations:
                description: ssl certificate(s) will expire in less then a week
                summary: renew expiring certificates to avoid downtime
            - alert: NGINXTooMany500s
              expr: 100 * ( sum( nginx_ingress_controller_requests{status=~"5.+"} ) / sum(nginx_ingress_controller_requests) ) > 5
              for: 1m
              labels:
                severity: warning
              annotations:
                description: Too many 5XXs
                summary: More than 5% of all requests returned 5XX, this requires your attention
            - alert: NGINXTooMany400s
              expr: 100 * ( sum( nginx_ingress_controller_requests{status=~"4.+"} ) / sum(nginx_ingress_controller_requests) ) > 5
              for: 1m
              labels:
                severity: warning
              annotations:
                description: Too many 4XXs
                summary: More than 5% of all requests returned 4XX, this requires your attention

---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: aws-alb-ingress-controller-public
  namespace: production
  annotations:
    kubernetes.io/ingress.class: "alb"
    alb.ingress.kubernetes.io/scheme: "internet-facing"
    alb.ingress.kubernetes.io/load-balancer-name: "dev-alb-nginx-public"
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP":80,"HTTPS": 443}]'
    alb.ingress.kubernetes.io/ssl-policy: ELBSecurityPolicy-TLS-1-1-2017-01
    alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:us-east-1:621123489063:certificate/b9a5ab99-775c-4c22-bfde-e08118b7f210
    alb.ingress.kubernetes.io/healthcheck-path: "/"
    alb.ingress.kubernetes.io/success-codes: "200,404"
    alb.ingress.kubernetes.io/inbound-cidrs: 10.0.0.0/8, 0.0.0.0/0, 116.203.159.143/32, 173.245.48.0/20, 103.21.244.0/22, 103.22.200.0/22, 103.31.4.0/22, 141.101.64.0/18, 108.162.192.0/18, 190.93.240.0/20, 188.114.96.0/20, 197.234.240.0/22, 198.41.128.0/17, 162.158.0.0/15, 104.16.0.0/12, 172.64.0.0/13, 131.0.72.0/22
    alb.ingress.kubernetes.io/load-balancer-attributes: deletion_protection.enabled=true
    alb.ingress.kubernetes.io/load-balancer-attributes: routing.http2.enabled=true
    alb.ingress.kubernetes.io/tags: Environment=dev
    alb.ingress.kubernetes.io/actions.ssl-redirect: '{"Type": "redirect", "RedirectConfig": { "Protocol": "HTTPS", "Port": "443", "StatusCode": "HTTP_301"}}'
spec:
  rules:
    - http:
        paths:
          - path: /*
            backend:
              serviceName: "ssl-redirect"
              servicePort: use-annotation
          - path: /*
            backend:
              serviceName: alb-ingress-nginx-public-controller
              servicePort: http
